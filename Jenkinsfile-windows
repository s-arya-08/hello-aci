pipeline {
    agent any

    parameters {
        string(name: 'OS_TYPE', defaultValue: 'Linux', description: 'OS type for the container (Linux/Windows)')
        string(name: 'PORT', defaultValue: '80', description: 'Port to expose')
        string(name: 'CPU', defaultValue: '1', description: 'Number of CPU cores')
        string(name: 'MEMORY', defaultValue: '1.5', description: 'Amount of memory in GB')
        string(name: 'LOCATION', defaultValue: 'eastus', description: 'Azure region for deployment')
    }

    environment {
        ACR_NAME = 'sanskartestacr'
        ACR_LOGIN_SERVER = "sanskartestacr.azurecr.io"
        IMAGE_NAME = 'sample-aci-app'
        IMAGE_TAG = 'v1'
        RESOURCE_GROUP = 'test-rg'
        ACI_NAME = 'sample-aci'

        AZURE_CLIENT_ID = credentials('azure-sp-client-id')    
        AZURE_CLIENT_SECRET = credentials('azure-sp-client-secret')
        AZURE_TENANT_ID = credentials('azure-sp-tenant-id')
        AZURE_SUBSCRIPTION_ID = "8b417db1-2052-4045-bea7-16fd2bc33574"
    }

    stages {
        stage('Azure Login') {
            steps {
                script {
                    bat """
                        az login --service-principal ^
                          --username $AZURE_CLIENT_ID ^
                          --password $AZURE_CLIENT_SECRET ^
                          --tenant $AZURE_TENANT_ID
                        az account set --subscription $AZURE_SUBSCRIPTION_ID
                    """
                }
            }
        }

        stage('Build and Push to ACR') {
            steps {
                bat """
                    echo Logging Docker into ACR...
                    docker login %ACR_LOGIN_SERVER% -u %AZURE_CLIENT_ID% -p %AZURE_CLIENT_SECRET%

                    echo Building image...
                    docker build -t %ACR_LOGIN_SERVER%/%IMAGE_NAME%:%IMAGE_TAG% .

                    echo Pushing image...
                    docker push %ACR_LOGIN_SERVER%/%IMAGE_NAME%:%IMAGE_TAG%
                """
            }
        }

        stage('Deploy to ACI') {
            steps {
                bat """
                    echo Fetching ACR credentials...
                    for /f "delims=" %%u in ('az acr credential show --name %ACR_NAME% --query "username" -o tsv') do set USERNAME=%%u
                    for /f "delims=" %%p in ('az acr credential show --name %ACR_NAME% --query "passwords[0].value" -o tsv') do set PASSWORD=%%p

                    echo Deploying container to Azure...
                    az container create ^
                      --resource-group %RESOURCE_GROUP% ^
                      --name %ACI_NAME% ^
                      --image %ACR_LOGIN_SERVER%/%IMAGE_NAME%:%IMAGE_TAG% ^
                      --registry-login-server %ACR_LOGIN_SERVER% ^
                      --registry-username %USERNAME% ^
                      --registry-password %PASSWORD% ^
                      --ports ${PORT} ^
                      --os-type ${OS_TYPE} ^
                      --location ${LOCATION} ^
                      --cpu ${CPU} ^
                      --memory ${MEMORY} ^
                      --restart-policy Always
                """
            }
        }
    }

    post {
        success {
            echo "✅ Deployed successfully. Check your container URL."
        }
        failure {
            echo "❌ Pipeline failed. See logs."
        }
    }
}
